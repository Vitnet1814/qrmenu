'use client';

import React, { useState } from 'react';

export interface Theme {
  id: string;
  name: string;
  description: string;
  colors: {
    primary: string;
    secondary: string;
    accent: string;
    background: string;
    surface: string;
    text: string;
  };
  preview: string;
  category: 'restaurant' | 'cafe' | 'fast-food' | 'bar' | 'modern' | 'premium';
}

export interface LayoutSettings {
  borderRadius: 'minimal' | 'medium' | 'large';
  padding: 'compact' | 'normal' | 'spacious';
  shadow: 'minimal' | 'normal' | 'dramatic';
}

export interface ColorPickerProps {
  colors: Theme['colors'];
  onChange: (colors: Theme['colors']) => void;
}

export interface LayoutSettingsProps {
  settings: LayoutSettings;
  onChange: (settings: LayoutSettings) => void;
}

export interface LivePreviewProps {
  theme: Theme;
  layoutSettings: LayoutSettings;
  restaurantName: string;
}

export interface DesignTipsProps {
  theme: Theme;
  layoutSettings: LayoutSettings;
}

// –ì–æ—Ç–æ–≤—ñ —Ç–µ–º–∏
export const themes: Theme[] = [
  {
    id: 'classic-restaurant',
    name: '–ö–ª–∞—Å–∏—á–Ω–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω',
    description: '–ï–ª–µ–≥–∞–Ω—Ç–Ω–∞ —Ç–µ–º–∞ –∑ —Ç–µ–ø–ª–∏–º–∏ –∫–æ—Ä–∏—á–Ω–µ–≤–∏–º–∏ —Ç–æ–Ω–∞–º–∏ –¥–ª—è –∫–ª–∞—Å–∏—á–Ω–∏—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ñ–≤',
    colors: {
      primary: '#8b4513',
      secondary: '#d2691e',
      accent: '#daa520',
      background: '#f5e6d3',
      surface: '#ffffff',
      text: '#2c1810'
    },
    preview: 'üçΩÔ∏è',
    category: 'restaurant'
  },
  {
    id: 'cozy-cafe',
    name: '–ó–∞—Ç–∏—à–Ω–µ –∫–∞—Ñ–µ',
    description: '–¢–µ–ø–ª–∞ —Ç–∞ –∑–∞—Ç–∏—à–Ω–∞ —Ç–µ–º–∞ –∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∏–º–∏ –∫–æ–ª—å–æ—Ä–∞–º–∏ –¥–ª—è –∫–∞—Ñ–µ',
    colors: {
      primary: '#6b4423',
      secondary: '#d4af37',
      accent: '#c9a96e',
      background: '#f4f1eb',
      surface: '#ffffff',
      text: '#2c1810'
    },
    preview: '‚òï',
    category: 'cafe'
  },
  {
    id: 'fast-food',
    name: '–§–∞—Å—Ç-—Ñ—É–¥',
    description: '–Ø—Å–∫—Ä–∞–≤–∞ —Ç–∞ –µ–Ω–µ—Ä–≥—ñ–π–Ω–∞ —Ç–µ–º–∞ –∑ —á–µ—Ä–≤–æ–Ω–∏–º–∏ —Ç–∞ –∂–æ–≤—Ç–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
    colors: {
      primary: '#ff6b35',
      secondary: '#ffd23f',
      accent: '#ff1744',
      background: '#ffe8e0',
      surface: '#ffffff',
      text: '#2c1810'
    },
    preview: 'üçî',
    category: 'fast-food'
  },
  {
    id: 'sushi-bar',
    name: '–°—É—à–∏-–±–∞—Ä',
    description: '–ú—ñ–Ω—ñ–º–∞–ª—ñ—Å—Ç–∏—á–Ω–∞ —Ç–µ–º–∞ –∑ –∑–µ–ª–µ–Ω–∏–º–∏ —Ç–∞ —á–µ—Ä–≤–æ–Ω–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
    colors: {
      primary: '#2c5530',
      secondary: '#ff6b6b',
      accent: '#4ecdc4',
      background: '#e8f5e8',
      surface: '#ffffff',
      text: '#1a2e1a'
    },
    preview: 'üç£',
    category: 'bar'
  },
  {
    id: 'pizzeria',
    name: '–ü—ñ—Ü–µ—Ä—ñ—è',
    description: '–Ü—Ç–∞–ª—ñ–π—Å—å–∫–∞ —Ç–µ–º–∞ –∑ —á–µ—Ä–≤–æ–Ω–∏–º–∏, –ø–æ–º–∞—Ä–∞–Ω—á–µ–≤–∏–º–∏ —Ç–∞ –∑–µ–ª–µ–Ω–∏–º–∏ –∫–æ–ª—å–æ—Ä–∞–º–∏',
    colors: {
      primary: '#d32f2f',
      secondary: '#ff9800',
      accent: '#4caf50',
      background: '#ffebee',
      surface: '#ffffff',
      text: '#2c1810'
    },
    preview: 'üçï',
    category: 'restaurant'
  },
  {
    id: 'modern',
    name: '–ú–æ–¥–µ—Ä–Ω',
    description: '–°—É—á–∞—Å–Ω–∞ —Ç–µ–º–∞ –∑ —Å–∏–Ω—ñ–º–∏ —Ç–∞ —Å—ñ—Ä–∏–º–∏ —Ç–æ–Ω–∞–º–∏ –¥–ª—è –º–æ–¥–µ—Ä–Ω–∏—Ö –∑–∞–∫–ª–∞–¥—ñ–≤',
    colors: {
      primary: '#1976d2',
      secondary: '#424242',
      accent: '#ff4081',
      background: '#e3f2fd',
      surface: '#ffffff',
      text: '#333333'
    },
    preview: 'üè¢',
    category: 'modern'
  },
  {
    id: 'dark',
    name: '–¢–µ–º–Ω–∞ —Ç–µ–º–∞',
    description: '–°—Ç–∏–ª—å–Ω–∞ —Ç–µ–º–Ω–∞ —Ç–µ–º–∞ –∑ —Ñ—ñ–æ–ª–µ—Ç–æ–≤–∏–º–∏ —Ç–∞ –±–ª–∞–∫–∏—Ç–Ω–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏',
    colors: {
      primary: '#bb86fc',
      secondary: '#03dac6',
      accent: '#cf6679',
      background: '#121212',
      surface: '#1e1e1e',
      text: '#ffffff'
    },
    preview: 'üåô',
    category: 'modern'
  },
  {
    id: 'spring',
    name: '–í–µ—Å–Ω—è–Ω–∞ —Ç–µ–º–∞',
    description: '–°–≤—ñ–∂–∞ —Ç–∞ –∂–∏—Ç—Ç—î—Ä–∞–¥—ñ—Å–Ω–∞ —Ç–µ–º–∞ –∑ –∑–µ–ª–µ–Ω–∏–º–∏ —Ç–∞ –∂–æ–≤—Ç–∏–º–∏ —Ç–æ–Ω–∞–º–∏',
    colors: {
      primary: '#4caf50',
      secondary: '#81c784',
      accent: '#ffb74d',
      background: '#e8f5e8',
      surface: '#ffffff',
      text: '#1a2e1a'
    },
    preview: 'üå∏',
    category: 'cafe'
  },
  {
    id: 'premium',
    name: '–ü—Ä–µ–º—ñ—É–º',
    description: '–†–æ–∑–∫—ñ—à–Ω–∞ —Ç–µ–º–∞ –∑ —á–æ—Ä–Ω–∏–º–∏ —Ç–∞ –∑–æ–ª–æ—Ç–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏ –¥–ª—è –ø—Ä–µ–º—ñ—É–º –∑–∞–∫–ª–∞–¥—ñ–≤',
    colors: {
      primary: '#1a1a1a',
      secondary: '#c9a96e',
      accent: '#d4af37',
      background: '#f5f5f5',
      surface: '#ffffff',
      text: '#2c1810'
    },
    preview: 'üëë',
    category: 'premium'
  }
];

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç ColorPicker
export const ColorPicker: React.FC<ColorPickerProps> = ({ colors, onChange }) => {
  const [localColors, setLocalColors] = useState(colors);
  const [activeColorKey, setActiveColorKey] = useState<keyof Theme['colors']>('primary');

  const handleColorChange = (colorKey: keyof Theme['colors'], value: string) => {
    const newColors = { ...localColors, [colorKey]: value };
    setLocalColors(newColors);
    onChange(newColors);
  };

  const colorLabels = {
    primary: '–û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–ª—ñ—Ä',
    secondary: '–î—Ä—É–≥–æ—Ä—è–¥–Ω–∏–π –∫–æ–ª—ñ—Ä',
    accent: '–ê–∫—Ü–µ–Ω—Ç–Ω–∏–π –∫–æ–ª—ñ—Ä',
    background: '–ö–æ–ª—ñ—Ä —Ñ–æ–Ω—É',
    surface: '–ö–æ–ª—ñ—Ä –ø–æ–≤–µ—Ä—Ö–Ω—ñ',
    text: '–ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É'
  };

  const predefinedColors = [
    '#8b4513', '#d2691e', '#daa520', '#6b4423', '#d4af37', '#c9a96e',
    '#ff6b35', '#ffd23f', '#ff1744', '#2c5530', '#ff6b6b', '#4ecdc4',
    '#d32f2f', '#ff9800', '#4caf50', '#1976d2', '#424242', '#ff4081',
    '#bb86fc', '#03dac6', '#cf6679', '#4caf50', '#81c784', '#ffb74d',
    '#1a1a1a', '#c9a96e', '#d4af37', '#2563eb', '#64748b', '#f59e0b'
  ];

  return (
    <div className="space-y-6">
      {/* –í–∏–±—ñ—Ä –∫–æ–ª—å–æ—Ä—É –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
          –û–±–µ—Ä—ñ—Ç—å –∫–æ–ª—ñ—Ä –¥–ª—è —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è:
        </h4>
        <div className="grid grid-cols-3 gap-2">
          {Object.entries(colorLabels).map(([key, label]) => (
            <button
              key={key}
              className={`px-3 py-2 text-sm font-medium rounded-md border transition-colors ${
                activeColorKey === key
                  ? 'bg-blue-500 text-white border-blue-500'
                  : 'bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-600 hover:bg-gray-50 dark:hover:bg-gray-700'
              }`}
              onClick={() => setActiveColorKey(key as keyof Theme['colors'])}
            >
              <div className="flex items-center gap-2">
                <div
                  className="w-4 h-4 rounded border border-gray-300"
                  style={{ backgroundColor: localColors[key as keyof Theme['colors']] }}
                />
                <span className="text-xs">{label}</span>
              </div>
            </button>
          ))}
        </div>
      </div>

      {/* –ü–æ—Ç–æ—á–Ω–∏–π –∫–æ–ª—ñ—Ä */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
          –ü–æ—Ç–æ—á–Ω–∏–π –∫–æ–ª—ñ—Ä ({colorLabels[activeColorKey]}):
        </h4>
        <div className="flex items-center gap-4">
          <div
            className="w-16 h-16 rounded-lg border-2 border-gray-300 shadow-sm"
            style={{ backgroundColor: localColors[activeColorKey] }}
          />
          <div className="flex-1">
            <input
              type="text"
              value={localColors[activeColorKey]}
              onChange={(e) => handleColorChange(activeColorKey, e.target.value)}
              className="w-full px-3 py-2 text-sm font-mono border border-gray-300 dark:border-gray-600 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 text-gray-900 dark:text-gray-100"
              placeholder="#000000"
            />
            <p className="text-xs text-gray-500 mt-1">
              –í–≤–µ–¥—ñ—Ç—å HEX –∫–æ–¥ –∫–æ–ª—å–æ—Ä—É
            </p>
          </div>
        </div>
      </div>

      {/* Color picker input */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
          –í–∏–±–µ—Ä—ñ—Ç—å –∫–æ–ª—ñ—Ä:
        </h4>
        <input
          type="color"
          value={localColors[activeColorKey]}
          onChange={(e) => handleColorChange(activeColorKey, e.target.value)}
          className="w-full h-12 rounded-lg border border-gray-300 cursor-pointer"
        />
      </div>

      {/* –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –≤–∏–∑–Ω–∞—á–µ–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">
          –ü–æ–ø–µ—Ä–µ–¥–Ω—å–æ –≤–∏–∑–Ω–∞—á–µ–Ω—ñ –∫–æ–ª—å–æ—Ä–∏:
        </h4>
        <div className="grid grid-cols-6 gap-2">
          {predefinedColors.map((color, index) => (
            <button
              key={index}
              className="w-8 h-8 rounded border border-gray-300 shadow-sm hover:scale-110 transition-transform"
              style={{ backgroundColor: color }}
              onClick={() => handleColorChange(activeColorKey, color)}
              title={color}
            />
          ))}
        </div>
      </div>

      {/* –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 mb-3">
          –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥:
        </h4>
        <div 
          className="p-4 rounded-lg border border-gray-300"
          style={{ backgroundColor: localColors.background }}
        >
          <div className="flex gap-2 mb-3">
            <div
              className="px-3 py-1 rounded text-sm text-white font-medium"
              style={{ backgroundColor: localColors.primary }}
            >
              –û—Å–Ω–æ–≤–Ω–∞ –∫–Ω–æ–ø–∫–∞
            </div>
            <div
              className="px-3 py-1 rounded text-sm text-white font-medium"
              style={{ backgroundColor: localColors.secondary }}
            >
              –î—Ä—É–≥–æ—Ä—è–¥–Ω–∞ –∫–Ω–æ–ø–∫–∞
            </div>
            <div
              className="px-3 py-1 rounded text-sm text-white font-medium"
              style={{ backgroundColor: localColors.accent }}
            >
              –ê–∫—Ü–µ–Ω—Ç–Ω–∞ –∫–Ω–æ–ø–∫–∞
            </div>
          </div>
          
          <div 
            className="p-3 rounded mb-3"
            style={{ backgroundColor: localColors.surface }}
          >
            <p 
              className="text-sm font-medium mb-1"
              style={{ color: localColors.text }}
            >
              –ü—Ä–∏–∫–ª–∞–¥ —Ç–µ–∫—Å—Ç—É –Ω–∞ –ø–æ–≤–µ—Ä—Ö–Ω—ñ
            </p>
            <p 
              className="text-xs"
              style={{ color: localColors.text }}
            >
              –î–æ–¥–∞—Ç–∫–æ–≤–∏–π –æ–ø–∏—Å –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –∫–æ–ª—å–æ—Ä—É —Ç–µ–∫—Å—Ç—É
            </p>
          </div>
          
          <div className="flex gap-2">
            {Object.entries(localColors).map(([key, color]) => (
              <div
                key={key}
                className="w-6 h-6 rounded border border-gray-300"
                style={{ backgroundColor: color }}
                title={`${key}: ${color}`}
              />
            ))}
          </div>
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç LayoutSettings
export const LayoutSettings: React.FC<LayoutSettingsProps> = ({ settings, onChange }) => {
  const [localSettings, setLocalSettings] = useState<LayoutSettings>(settings);

  const handleSettingChange = <K extends keyof LayoutSettings>(
    key: K,
    value: LayoutSettings[K]
  ) => {
    const newSettings = { ...localSettings, [key]: value };
    setLocalSettings(newSettings);
    onChange(newSettings);
  };

  const borderRadiusOptions = [
    { value: 'minimal' as const, label: '–ú—ñ–Ω—ñ–º–∞–ª—å–Ω–µ', description: '2px' },
    { value: 'medium' as const, label: '–°–µ—Ä–µ–¥–Ω—î', description: '8px' },
    { value: 'large' as const, label: '–í–µ–ª–∏–∫–µ', description: '16px' }
  ];

  const paddingOptions = [
    { value: 'compact' as const, label: '–ö–æ–º–ø–∞–∫—Ç–Ω—ñ', description: '8px' },
    { value: 'normal' as const, label: '–ó–≤–∏—á–∞–π–Ω—ñ', description: '16px' },
    { value: 'spacious' as const, label: '–í–µ–ª–∏–∫—ñ', description: '24px' }
  ];

  const shadowOptions = [
    { value: 'minimal' as const, label: '–ú—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ', description: '–õ–µ–≥–∫–∞ —Ç—ñ–Ω—å' },
    { value: 'normal' as const, label: '–ó–≤–∏—á–∞–π–Ω—ñ', description: '–ü–æ–º—ñ—Ä–Ω–∞ —Ç—ñ–Ω—å' },
    { value: 'dramatic' as const, label: '–î—Ä–∞–º–∞—Ç–∏—á–Ω—ñ', description: '–°–∏–ª—å–Ω–∞ —Ç—ñ–Ω—å' }
  ];

  const getBorderRadiusClass = (value: LayoutSettings['borderRadius']) => {
    switch (value) {
      case 'minimal': return 'rounded-sm';
      case 'medium': return 'rounded-md';
      case 'large': return 'rounded-lg';
      default: return 'rounded-md';
    }
  };

  const getPaddingClass = (value: LayoutSettings['padding']) => {
    switch (value) {
      case 'compact': return 'p-2';
      case 'normal': return 'p-4';
      case 'spacious': return 'p-6';
      default: return 'p-4';
    }
  };

  const getShadowClass = (value: LayoutSettings['shadow']) => {
    switch (value) {
      case 'minimal': return 'shadow-sm';
      case 'normal': return 'shadow-md';
      case 'dramatic': return 'shadow-lg';
      default: return 'shadow-md';
    }
  };

  return (
    <div className="space-y-6">
      {/* –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤ */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 mb-3">
          –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è –∫—É—Ç—ñ–≤:
        </h4>
        <div className="grid grid-cols-3 gap-2">
          {borderRadiusOptions.map((option) => (
            <button
              key={option.value}
              className={`flex flex-col items-center gap-1 h-auto py-3 px-2 rounded-md border transition-colors ${
                localSettings.borderRadius === option.value
                  ? 'bg-blue-500 text-white border-blue-500'
                  : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'
              }`}
              onClick={() => handleSettingChange('borderRadius', option.value)}
            >
              <div 
                className={`w-8 h-8 bg-gray-200 border border-gray-300 ${getBorderRadiusClass(option.value)}`}
              />
              <span className="text-xs font-medium">{option.label}</span>
              <span className="text-xs opacity-70">{option.description}</span>
            </button>
          ))}
        </div>
      </div>

      {/* –í—ñ–¥—Å—Ç—É–ø–∏ */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 mb-3">
          –í—ñ–¥—Å—Ç—É–ø–∏:
        </h4>
        <div className="grid grid-cols-3 gap-2">
          {paddingOptions.map((option) => (
            <button
              key={option.value}
              className={`flex flex-col items-center gap-1 h-auto py-3 px-2 rounded-md border transition-colors ${
                localSettings.padding === option.value
                  ? 'bg-blue-500 text-white border-blue-500'
                  : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'
              }`}
              onClick={() => handleSettingChange('padding', option.value)}
            >
              <div 
                className={`w-8 h-8 bg-gray-200 border border-gray-300 relative ${getPaddingClass(option.value)}`}
              >
                <div className="absolute inset-1 bg-white border border-gray-400 rounded-sm" />
              </div>
              <span className="text-xs font-medium">{option.label}</span>
              <span className="text-xs opacity-70">{option.description}</span>
            </button>
          ))}
        </div>
      </div>

      {/* –¢—ñ–Ω—ñ */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 mb-3">
          –¢—ñ–Ω—ñ:
        </h4>
        <div className="grid grid-cols-3 gap-2">
          {shadowOptions.map((option) => (
            <button
              key={option.value}
              className={`flex flex-col items-center gap-1 h-auto py-3 px-2 rounded-md border transition-colors ${
                localSettings.shadow === option.value
                  ? 'bg-blue-500 text-white border-blue-500'
                  : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'
              }`}
              onClick={() => handleSettingChange('shadow', option.value)}
            >
              <div 
                className={`w-8 h-8 bg-white border border-gray-300 ${getShadowClass(option.value)}`}
              />
              <span className="text-xs font-medium">{option.label}</span>
              <span className="text-xs opacity-70">{option.description}</span>
            </button>
          ))}
        </div>
      </div>

      {/* –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ */}
      <div>
        <h4 className="text-sm font-medium text-gray-700 mb-3">
          –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥:
        </h4>
        <div className="p-4 bg-gray-50 rounded-lg">
          <div 
            className={`bg-white border border-gray-200 mb-3 ${getBorderRadiusClass(localSettings.borderRadius)} ${getPaddingClass(localSettings.padding)} ${getShadowClass(localSettings.shadow)}`}
          >
            <h5 className="text-sm font-semibold text-gray-900 mb-2">
              –ü—Ä–∏–∫–ª–∞–¥ –∫–∞—Ä—Ç–∫–∏ –º–µ–Ω—é
            </h5>
            <p className="text-xs text-gray-600 mb-2">
              –û–ø–∏—Å —Å—Ç—Ä–∞–≤–∏ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º –ø–æ—Ç–æ—á–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –º–∞–∫–µ—Ç—É
            </p>
            <div className="flex gap-2">
              <div className={`px-3 py-1 bg-blue-500 text-white text-xs font-medium ${getBorderRadiusClass(localSettings.borderRadius)}`}>
                –ö–Ω–æ–ø–∫–∞
              </div>
              <div className={`px-3 py-1 bg-gray-200 text-gray-700 text-xs font-medium ${getBorderRadiusClass(localSettings.borderRadius)}`}>
                –î—Ä—É–≥–æ—Ä—è–¥–Ω–∞
              </div>
            </div>
          </div>
          
          <div className="text-xs text-gray-500 space-y-1">
            <p>‚Ä¢ –ó–∞–∫—Ä—É–≥–ª–µ–Ω–Ω—è: {borderRadiusOptions.find(o => o.value === localSettings.borderRadius)?.description}</p>
            <p>‚Ä¢ –í—ñ–¥—Å—Ç—É–ø–∏: {paddingOptions.find(o => o.value === localSettings.padding)?.description}</p>
            <p>‚Ä¢ –¢—ñ–Ω—ñ: {shadowOptions.find(o => o.value === localSettings.shadow)?.description}</p>
          </div>
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç LivePreview
export const LivePreview: React.FC<LivePreviewProps> = ({ 
  theme, 
  layoutSettings, 
  restaurantName = '–ù–∞–∑–≤–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É' 
}) => {
  const getBorderRadiusClass = (value: LayoutSettings['borderRadius']) => {
    switch (value) {
      case 'minimal': return 'rounded-sm';
      case 'medium': return 'rounded-md';
      case 'large': return 'rounded-lg';
      default: return 'rounded-md';
    }
  };

  const getPaddingClass = (value: LayoutSettings['padding']) => {
    switch (value) {
      case 'compact': return 'p-2';
      case 'normal': return 'p-4';
      case 'spacious': return 'p-6';
      default: return 'p-4';
    }
  };

  const getShadowClass = (value: LayoutSettings['shadow']) => {
    switch (value) {
      case 'minimal': return 'shadow-sm';
      case 'normal': return 'shadow-md';
      case 'dramatic': return 'shadow-lg';
      default: return 'shadow-md';
    }
  };

  const borderRadiusClass = getBorderRadiusClass(layoutSettings.borderRadius);
  const paddingClass = getPaddingClass(layoutSettings.padding);
  const shadowClass = getShadowClass(layoutSettings.shadow);

  return (
    <div className="p-6 bg-gray-50 rounded-xl">
      <div className="mb-4">
        <h3 className="text-lg font-semibold text-gray-900 mb-2">
          –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ –º–µ–Ω—é
        </h3>
        <p className="text-sm text-gray-600">
          –Ø–∫ –≤–∏–≥–ª—è–¥–∞—Ç–∏–º–µ –≤–∞—à–µ –º–µ–Ω—é –∑ –ø–æ—Ç–æ—á–Ω–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏
        </p>
      </div>

      {/* –ú–æ–±—ñ–ª—å–Ω–∏–π –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥ */}
      <div className="max-w-sm mx-auto bg-white rounded-xl shadow-xl overflow-hidden">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É */}
        <div 
          className={`text-center py-6 px-4 ${shadowClass}`}
          style={{ 
            background: `linear-gradient(135deg, ${theme.colors.primary} 0%, ${theme.colors.secondary} 100%)`,
            color: theme.colors.text === '#ffffff' ? '#ffffff' : '#ffffff'
          }}
        >
          <h1 className="text-xl font-bold mb-1">{restaurantName}</h1>
          <p className="text-sm opacity-90">–†–µ—Å—Ç–æ—Ä–∞–Ω —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—ó –∫—É—Ö–Ω—ñ</p>
        </div>

        {/* –ö–∞—Ç–µ–≥–æ—Ä—ñ—ó */}
        <div className="p-4" style={{ backgroundColor: theme.colors.background }}>
          <div className="flex gap-2 mb-4 overflow-x-auto">
            <div 
              className={`px-4 py-2 text-sm font-medium whitespace-nowrap ${borderRadiusClass} ${shadowClass}`}
              style={{ 
                backgroundColor: theme.colors.primary,
                color: '#ffffff'
              }}
            >
              –ì–∞—Ä—è—á—ñ —Å—Ç—Ä–∞–≤–∏
            </div>
            <div 
              className={`px-4 py-2 text-sm font-medium whitespace-nowrap ${borderRadiusClass} ${shadowClass}`}
              style={{ 
                backgroundColor: theme.colors.surface,
                color: theme.colors.text,
                border: `1px solid ${theme.colors.primary}20`
              }}
            >
              –°–∞–ª–∞—Ç–∏
            </div>
            <div 
              className={`px-4 py-2 text-sm font-medium whitespace-nowrap ${borderRadiusClass} ${shadowClass}`}
              style={{ 
                backgroundColor: theme.colors.surface,
                color: theme.colors.text,
                border: `1px solid ${theme.colors.primary}20`
              }}
            >
              –ù–∞–ø–æ—ó
            </div>
          </div>

          {/* –°—Ç—Ä–∞–≤–∏ */}
          <div className="space-y-3">
            {/* –°—Ç—Ä–∞–≤–∞ 1 */}
            <div 
              className={`bg-white ${borderRadiusClass} ${paddingClass} ${shadowClass}`}
              style={{ border: `1px solid ${theme.colors.primary}10` }}
            >
              <div className="flex justify-between items-start mb-2">
                <div className="flex-1">
                  <h3 
                    className="text-base font-semibold mb-1"
                    style={{ color: theme.colors.text }}
                  >
                    –ë–æ—Ä—â —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π
                  </h3>
                  <p 
                    className="text-sm mb-2"
                    style={{ color: theme.colors.text, opacity: 0.7 }}
                  >
                    –¢—Ä–∞–¥–∏—Ü—ñ–π–Ω–∏–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π –±–æ—Ä—â –∑—ñ —Å–º–µ—Ç–∞–Ω–æ—é —Ç–∞ –∑–µ–ª–µ–Ω–Ω—é
                  </p>
                </div>
                <div 
                  className="text-lg font-bold ml-2"
                  style={{ color: theme.colors.primary }}
                >
                  120‚Ç¥
                </div>
              </div>
              <div className="flex gap-2">
                <div 
                  className={`px-3 py-1 text-xs font-medium ${borderRadiusClass}`}
                  style={{ 
                    backgroundColor: theme.colors.accent,
                    color: '#ffffff'
                  }}
                >
                  –ì–∞—Ä—è—á–µ
                </div>
                <div 
                  className={`px-3 py-1 text-xs font-medium ${borderRadiusClass}`}
                  style={{ 
                    backgroundColor: theme.colors.secondary,
                    color: '#ffffff'
                  }}
                >
                  –í–µ–≥–µ—Ç–∞—Ä—ñ–∞–Ω—Å—å–∫–µ
                </div>
              </div>
            </div>

            {/* –°—Ç—Ä–∞–≤–∞ 2 */}
            <div 
              className={`bg-white ${borderRadiusClass} ${paddingClass} ${shadowClass}`}
              style={{ border: `1px solid ${theme.colors.primary}10` }}
            >
              <div className="flex justify-between items-start mb-2">
                <div className="flex-1">
                  <h3 
                    className="text-base font-semibold mb-1"
                    style={{ color: theme.colors.text }}
                  >
                    –í–∞—Ä–µ–Ω–∏–∫–∏ –∑ –∫–∞—Ä—Ç–æ–ø–ª–µ—é
                  </h3>
                  <p 
                    className="text-sm mb-2"
                    style={{ color: theme.colors.text, opacity: 0.7 }}
                  >
                    –î–æ–º–∞—à–Ω—ñ –≤–∞—Ä–µ–Ω–∏–∫–∏ –∑ –∫–∞—Ä—Ç–æ–ø–ª–µ—é —Ç–∞ —Ü–∏–±—É–ª–µ—é
                  </p>
                </div>
                <div 
                  className="text-lg font-bold ml-2"
                  style={{ color: theme.colors.primary }}
                >
                  95‚Ç¥
                </div>
              </div>
              <div className="flex gap-2">
                <div 
                  className={`px-3 py-1 text-xs font-medium ${borderRadiusClass}`}
                  style={{ 
                    backgroundColor: theme.colors.accent,
                    color: '#ffffff'
                  }}
                >
                  –ü–æ–ø—É–ª—è—Ä–Ω–µ
                </div>
              </div>
            </div>
          </div>
        </div>

        {/* –§—É—Ç–µ—Ä */}
        <div 
          className="text-center py-3 px-4"
          style={{ 
            backgroundColor: theme.colors.surface,
            color: theme.colors.text,
            borderTop: `1px solid ${theme.colors.primary}20`
          }}
        >
          <p className="text-xs opacity-70">
            –°–∫–∞–Ω—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –ø–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
          </p>
        </div>
      </div>

      {/* –ö–æ–ª—å–æ—Ä–æ–≤–∞ –ø–∞–ª—ñ—Ç—Ä–∞ */}
      <div className="mt-6">
        <h4 className="text-sm font-medium text-gray-700 mb-3">
          –ü–æ—Ç–æ—á–Ω–∞ –∫–æ–ª—å–æ—Ä–æ–≤–∞ –ø–∞–ª—ñ—Ç—Ä–∞:
        </h4>
        <div className="grid grid-cols-6 gap-2">
          {Object.entries(theme.colors).map(([key, color]) => (
            <div key={key} className="text-center">
              <div
                className="w-8 h-8 rounded border border-gray-300 mb-1 mx-auto"
                style={{ backgroundColor: color }}
                title={`${key}: ${color}`}
              />
              <p className="text-xs text-gray-600 capitalize">{key}</p>
            </div>
          ))}
        </div>
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç DesignTips
export const DesignTips: React.FC<DesignTipsProps> = ({ theme, layoutSettings }) => {
  const [activeTip, setActiveTip] = useState<string | null>(null);

  const getTips = () => {
    const tips = [];

    // –ü–æ—Ä–∞–¥–∏ –ø–æ –∫–æ–ª—å–æ—Ä–∞—Ö
    const primaryLuminance = getLuminance(theme.colors.primary);
    const textLuminance = getLuminance(theme.colors.text);
    const backgroundLuminance = getLuminance(theme.colors.background);

    if (Math.abs(primaryLuminance - backgroundLuminance) < 0.3) {
      tips.push({
        id: 'contrast-primary',
        title: '–ù–∏–∑—å–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç',
        description: '–û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–ª—ñ—Ä —Ç–∞ —Ñ–æ–Ω –º–∞—é—Ç—å –Ω–∏–∑—å–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç. –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ –±—ñ–ª—å—à –∫–æ–Ω—Ç—Ä–∞—Å—Ç–Ω—ñ –∫–æ–ª—å–æ—Ä–∏ –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ.',
        level: 'warning'
      });
    }

    if (Math.abs(textLuminance - backgroundLuminance) < 0.2) {
      tips.push({
        id: 'contrast-text',
        title: '–ü—Ä–æ–±–ª–µ–º–∞ –∑ —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—é',
        description: '–ö–æ–ª—ñ—Ä —Ç–µ–∫—Å—Ç—É —Ç–∞ —Ñ–æ–Ω—É –º–∞—é—Ç—å –∑–∞–Ω–∞–¥—Ç–æ –Ω–∏–∑—å–∫–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç. –¶–µ –º–æ–∂–µ —É—Å–∫–ª–∞–¥–Ω–∏—Ç–∏ —á–∏—Ç–∞–Ω–Ω—è –º–µ–Ω—é.',
        level: 'warning'
      });
    }

    // –ü–æ–∑–∏—Ç–∏–≤–Ω—ñ –ø–æ—Ä–∞–¥–∏
    if (Math.abs(primaryLuminance - backgroundLuminance) > 0.5) {
      tips.push({
        id: 'good-contrast',
        title: '–í—ñ–¥–º—ñ–Ω–Ω–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç',
        description: '–û—Å–Ω–æ–≤–Ω–∏–π –∫–æ–ª—ñ—Ä —Ç–∞ —Ñ–æ–Ω –º–∞—é—Ç—å –≤—ñ–¥–º—ñ–Ω–Ω–∏–π –∫–æ–Ω—Ç—Ä–∞—Å—Ç. –¶–µ –∑–∞–±–µ–∑–ø–µ—á—É—î —á—É–¥–æ–≤—É —á–∏—Ç–∞–±–µ–ª—å–Ω—ñ—Å—Ç—å –º–µ–Ω—é.',
        level: 'success'
      });
    }

    return tips;
  };

  const getLuminance = (hex: string): number => {
    const rgb = parseInt(hex.slice(1), 16);
    const r = (rgb >> 16) & 0xff;
    const g = (rgb >> 8) & 0xff;
    const b = (rgb >> 0) & 0xff;
    return (0.299 * r + 0.587 * g + 0.114 * b) / 255;
  };

  const getLevelColor = (level: string) => {
    switch (level) {
      case 'success': return 'text-green-600 bg-green-50 border-green-200';
      case 'warning': return 'text-orange-600 bg-orange-50 border-orange-200';
      case 'info': return 'text-blue-600 bg-blue-50 border-blue-200';
      default: return 'text-gray-600 bg-gray-50 border-gray-200';
    }
  };

  const tips = getTips();

  return (
    <div className="p-6 bg-white rounded-xl border border-gray-200">
      <div className="mb-4">
        <h3 className="text-lg font-semibold text-gray-900 mb-2">
          –ü–æ—Ä–∞–¥–∏ –¥–ª—è –∫—Ä–∞—â–æ–≥–æ –¥–∏–∑–∞–π–Ω—É
        </h3>
        <p className="text-sm text-gray-600">
          –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –ø–æ–∫—Ä–∞—â–µ–Ω–Ω—è –≤–∏–≥–ª—è–¥—É –≤–∞—à–æ–≥–æ –º–µ–Ω—é
        </p>
      </div>

      {tips.length === 0 ? (
        <div className="text-center py-8">
          <div className="text-4xl mb-2">üéâ</div>
          <p className="text-sm text-gray-600">
            –í—ñ–¥–º—ñ–Ω–Ω–æ! –í–∞—à –¥–∏–∑–∞–π–Ω –≤–∏–≥–ª—è–¥–∞—î —á—É–¥–æ–≤–æ –±–µ–∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ–π.
          </p>
        </div>
      ) : (
        <div className="space-y-3">
          {tips.map((tip) => (
            <div
              key={tip.id}
              className={`p-4 rounded-lg border cursor-pointer transition-all duration-200 ${getLevelColor(tip.level)} ${
                activeTip === tip.id ? 'shadow-md scale-105' : 'hover:shadow-sm'
              }`}
              onClick={() => setActiveTip(activeTip === tip.id ? null : tip.id)}
            >
              <div className="flex items-start gap-3">
                <div className="text-lg flex-shrink-0">
                  {tip.level === 'success' ? '‚ú®' : tip.level === 'warning' ? '‚ö†Ô∏è' : '‚ÑπÔ∏è'}
                </div>
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <h4 className="text-sm font-semibold">{tip.title}</h4>
                  </div>
                  <p className="text-sm opacity-90">
                    {tip.description}
                  </p>
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* –ó–∞–≥–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó */}
      <div className="mt-6 pt-4 border-t border-gray-200">
        <h4 className="text-sm font-semibold text-gray-900 mb-3">
          –ó–∞–≥–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:
        </h4>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
          <div className="flex items-start gap-2">
            <span className="text-blue-500">üí°</span>
            <div>
              <p className="text-xs font-medium text-gray-900">–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è</p>
              <p className="text-xs text-gray-600">–ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –º–µ–Ω—é –Ω–∞ —Ä—ñ–∑–Ω–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—è—Ö</p>
            </div>
          </div>
          <div className="flex items-start gap-2">
            <span className="text-green-500">üì±</span>
            <div>
              <p className="text-xs font-medium text-gray-900">–ú–æ–±—ñ–ª—å–Ω—ñ—Å—Ç—å</p>
              <p className="text-xs text-gray-600">–û–ø—Ç–∏–º—ñ–∑—É–π—Ç–µ –¥–ª—è –º–æ–±—ñ–ª—å–Ω–∏—Ö –µ–∫—Ä–∞–Ω—ñ–≤</p>
            </div>
          </div>
          <div className="flex items-start gap-2">
            <span className="text-purple-500">‚ö°</span>
            <div>
              <p className="text-xs font-medium text-gray-900">–®–≤–∏–¥–∫—ñ—Å—Ç—å</p>
              <p className="text-xs text-gray-600">–ó–±–µ—Ä—ñ–≥–∞–π—Ç–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–º–∏</p>
            </div>
          </div>
          <div className="flex items-start gap-2">
            <span className="text-orange-500">üéØ</span>
            <div>
              <p className="text-xs font-medium text-gray-900">–¶—ñ–ª—å–æ–≤–∞ –∞—É–¥–∏—Ç–æ—Ä—ñ—è</p>
              <p className="text-xs text-gray-600">–í—Ä–∞—Ö–æ–≤—É–π—Ç–µ —Å—Ç–∏–ª—å –≤–∞—à–æ–≥–æ –∑–∞–∫–ª–∞–¥—É</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
